{"version":3,"sources":["pages/LandingPage.tsx","pages/BottomNavBar.tsx","components/CardMapper.tsx","assets/CgiLogo.png","assets/LboroLogo.jpg","components/SubHeading.tsx","pages/Experience.tsx","assets/robot-mapper.jpg","assets/astrofield.jpg","assets/applocker.jpg","pages/Projects.tsx","pages/App.tsx","reportWebVitals.ts","index.tsx"],"names":["LandingPage","Container","style","height","Row","display","justifyContent","className","alignItems","alignSelf","flexWrap","color","Component","BottomNavBar","contactItems","icon","faFacebook","link","faGithub","faInstagram","faLinkedin","NavBarItem","href","Navbar","Text","size","fixed","backgroundColor","Collapse","width","map","contactItem","CardShadow","Card","borderRadius","border","margin","boxShadow","this","props","children","SubHeading","paddingLeft","headingTitle","Experience","experienceItems","workName","workImage","lboroLogo","workRole","workDescription","workTechnologies","cgiLogo","ExperienceItem","Col","lg","xs","Body","sm","Img","src","maxWidth","paddingTop","workTechnology","padding","fontWeight","borderShadow","experienceItem","Projects","projectItems","projectName","projectImage","robotMapper","projectDescription","projectTechnologies","projectLink","astroField","appLocker","ProjectItem","projectTechnology","flexDirection","overflow","overflowY","id","projectItem","App","document","title","marginBottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0b4595fd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\n\r\n\r\nclass LandingPage extends Component {\r\n  render() {\r\n    return (\r\n        <Container style={{ height: \"100vh\" }}>\r\n          <Row\r\n            style={{\r\n              height: \"100%\",\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n            }}\r\n          >\r\n            <h1\r\n              className=\"text-center display-3\"\r\n              style={{\r\n                alignItems: \"center\",\r\n                alignSelf: \"center\",\r\n                display: \"flex\",\r\n                flexWrap: \"wrap\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            >\r\n              Alex\r\n              <div style={{ color: \"blue\" }} className=\"ml-3\">\r\n                Musgrove.\r\n              </div>\r\n            </h1>\r\n          </Row>\r\n        </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LandingPage;\r\n","import { IconDefinition } from \"@fortawesome/fontawesome-svg-core\";\r\nimport {\r\n  faFacebook,\r\n  faGithub,\r\n  faInstagram,\r\n  faLinkedin,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Component } from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nimport \"./styles/BottomNavBar.css\";\r\n\r\nclass BottomNavBar extends Component {\r\n  render() {\r\n    type contactType = {\r\n      icon: IconDefinition;\r\n      link?: string;\r\n    };\r\n\r\n    // All associated social media connections and their links go here.\r\n    let contactItems: contactType[] = [\r\n      { icon: faFacebook, link: \"https://www.facebook.com/AlexMuzey/\" },\r\n      { icon: faGithub, link: \"https://github.com/AlexMuzzy\" },\r\n      { icon: faInstagram, link: \"https://www.instagram.com/alex.muzzy/\" },\r\n      { icon: faLinkedin, link: \"https://www.linkedin.com/in/alex-musgrove-242a0b16a/\" },\r\n    ];\r\n\r\n    const NavBarItem = ({ icon, link }: contactType) => (\r\n      <a href={link}>\r\n        <Navbar.Text\r\n          style={{\r\n            color: \"white\",\r\n          }}\r\n          className=\"mx-4\"\r\n        >\r\n          <FontAwesomeIcon icon={icon} size=\"2x\" className=\"hvr-fade\" />\r\n        </Navbar.Text>\r\n      </a>\r\n    );\r\n\r\n    return (\r\n      <Navbar fixed=\"bottom\" style={{ backgroundColor: \"blue\" }}>\r\n        <Navbar.Collapse style={{ justifyContent: \"center\", width: \"100%\" }}>\r\n          {contactItems.map((contactItem: contactType) => (\r\n            <NavBarItem {...contactItem} />\r\n          ))}\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BottomNavBar;\r\n","import React, { Component, CSSProperties } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nclass CardShadow extends Component<{style?: CSSProperties}> {\r\n  render() {\r\n    const borderShadow: CSSProperties = {\r\n      boxShadow:\r\n        \"rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px\",\r\n    };\r\n\r\n    return (\r\n      <Card\r\n        style={{\r\n          borderRadius: \"1rem\",\r\n          border: \"none\",\r\n          margin: \"1em\",\r\n          width: \"100%\",\r\n          ...borderShadow,\r\n          ...this.props?.style\r\n        }}\r\n      >\r\n        {this.props?.children}\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardShadow;","export default __webpack_public_path__ + \"static/media/CgiLogo.8c7d433d.png\";","export default __webpack_public_path__ + \"static/media/LboroLogo.8a27ab87.jpg\";","import React, { Component } from \"react\";\r\nimport { Row } from \"react-bootstrap\";\r\n\r\nclass SubHeading extends Component<{ headingTitle: string }> {\r\n  render() {\r\n    return (\r\n      <Row style={{ height: \"100%\" }}>\r\n        <h3 style={{ paddingLeft: \"1rem\" }}>{this.props.headingTitle}</h3>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SubHeading;","import React, { Component, CSSProperties } from \"react\";\r\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\r\nimport CardShadow from \"../components/CardMapper\";\r\nimport cgiLogo from \"../assets/CgiLogo.png\";\r\nimport lboroLogo from \"../assets/LboroLogo.jpg\";\r\nimport SubHeading from \"../components/SubHeading\";\r\n\r\nclass Experience extends Component<{ borderShadow: CSSProperties }> {\r\n  render() {\r\n    type experienceType = {\r\n      workName: string;\r\n      workImage?: string;\r\n      workRole: string;\r\n      workDescription?: string;\r\n      workTechnologies?: string[];\r\n    };\r\n\r\n    const experienceItems: experienceType[] = [\r\n      {\r\n        workName: \"Loughborough University\",\r\n        workImage: lboroLogo,\r\n        workRole: \"Research Software Developer\",\r\n        workDescription: `Development of an image manipulation algorithm in data analysis \r\n                          software along with python-based front end client.`,\r\n        workTechnologies: [\r\n          \"Python\",\r\n          \"Computer Vision\",\r\n          \"Graphics Programming\",\r\n          \"NumPy\",\r\n          \"SciPy\",\r\n          \"Kivy\",\r\n          \"SciKit-Image\",\r\n          \"Git\",\r\n          \"GitHub\",\r\n        ],\r\n      },\r\n\r\n      {\r\n        workName: \"CGI IT UK\",\r\n        workImage: cgiLogo,\r\n        workRole: \"Junior Software Engineer\",\r\n        workDescription: `Java web API Devlopment, design and development of \r\n                          a Python server side automation tool and performant\r\n                          C++ network software.`,\r\n        workTechnologies: [\r\n          \"Java\",\r\n          \"C++\",\r\n          \"Python\",\r\n          \"SVN\",\r\n          \"Robot Framework\",\r\n          \"API Development\",\r\n          \"Git\",\r\n          \"GTest\",\r\n          \"JUnit\",\r\n\r\n          \"Linux Development\",\r\n          \"Bash\",\r\n          \"PowerShell\",\r\n          \"Maven\",\r\n          \"JUnit\",\r\n        ],\r\n      },\r\n    ];\r\n\r\n    const ExperienceItem = ({\r\n      workName,\r\n      workImage,\r\n      workRole,\r\n      workDescription,\r\n      workTechnologies,\r\n    }: experienceType) => (\r\n      <Col lg=\"6\" xs=\"12\" style={{ display: \"flex\" }}>\r\n        <Row>\r\n          <CardShadow>\r\n            <Card.Body>\r\n              <Row>\r\n                <Col sm=\"4\">\r\n                  <Card.Text>\r\n                    <div className=\"h4 lead\">{workName}</div>\r\n                  </Card.Text>\r\n                  <Card.Img\r\n                    src={workImage}\r\n                    style={{\r\n                      backgroundColor: \"transparent\",\r\n                      maxWidth: \"10rem\",\r\n                      margin: \"0 auto\",\r\n                      display: \"block\",\r\n                    }}\r\n                  />\r\n                  <Card.Text>\r\n                    <div className=\"py-2 text-center lead\">{workRole}</div>\r\n                  </Card.Text>\r\n                </Col>\r\n                <Col sm=\"8\">\r\n                  <Card.Text style={{ paddingTop: \"1.5rem\" }}>\r\n                    {workDescription}\r\n                  </Card.Text>\r\n                  {workTechnologies?.map((workTechnology: string) => (\r\n                    <div\r\n                      style={{\r\n                        display: \"inline-block\",\r\n                        padding: \"0.5rem\",\r\n                        margin: \"0.5rem\",\r\n                        backgroundColor: \"blue\",\r\n                        color: \"white\",\r\n                        borderRadius: \"0.75rem\",\r\n                        fontWeight: \"lighter\",\r\n                        ...this.props.borderShadow,\r\n                      }}\r\n                    >\r\n                      {workTechnology}\r\n                    </div>\r\n                  ))}\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </CardShadow>\r\n        </Row>\r\n      </Col>\r\n    );\r\n\r\n    return (\r\n      <Container>\r\n        <SubHeading headingTitle=\"Experience\" />\r\n        <Row>\r\n          {experienceItems.map((experienceItem: experienceType) => (\r\n            <ExperienceItem {...experienceItem} />\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Experience;\r\n","export default __webpack_public_path__ + \"static/media/robot-mapper.8bfe5775.jpg\";","export default __webpack_public_path__ + \"static/media/astrofield.f0257643.jpg\";","export default __webpack_public_path__ + \"static/media/applocker.7bb4831d.jpg\";","import { Component, CSSProperties } from \"react\";\r\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport CardShadow from \"../components/CardMapper\";\r\nimport SubHeading from \"../components/SubHeading\";\r\n\r\nimport robotMapper from \"../assets/robot-mapper.jpg\";\r\nimport astroField from \"../assets/astrofield.jpg\";\r\nimport appLocker from \"../assets/applocker.jpg\";\r\n\r\nimport \"./styles/projects.css\";\r\n\r\nclass Projects extends Component<{ borderShadow: CSSProperties }> {\r\n  render() {\r\n    type projectType = {\r\n      projectName: string;\r\n      projectImage?: string;\r\n      projectDescription: string;\r\n      projectTechnologies?: string[];\r\n      projectLink?: string;\r\n    };\r\n\r\n    const projectItems: projectType[] = [\r\n      {\r\n        projectName: \"Mobile Robotic Optic Mapper\",\r\n        projectImage: robotMapper,\r\n        projectDescription: `A research project that was used for my University\r\n                             Dissertation where Graphical Mapper process was implemented\r\n                             on top of a Visual SLAM system. \r\n                             \r\n                             A visual-based collision detection system was also written as a concurrent process \r\n                             to allow autonomous movement.`,\r\n        projectTechnologies: [\r\n          \"C++\",\r\n          \"ROS2 Foxy\",\r\n          \"Orb-SLAM2\",\r\n          \"Pointcloud\",\r\n          \"Git\",\r\n          \"Python 3\",\r\n          \"Linux\",\r\n          \"NumPy\",\r\n        ],\r\n        projectLink: \"https://github.com/AlexMuzzy/ORB_SLAM2-AUTO\",\r\n      },\r\n\r\n      {\r\n        projectName: \"AstroField\",\r\n        projectImage: astroField,\r\n        projectDescription: `A mobile game made in Unity, a rocket flies through an\r\n                             infinite runner that has to avoid oncoming asteroids \r\n                             as they become increasingly more prevalent.`,\r\n        projectTechnologies: [\"Blender\", \"C#\", \"Unity\"],\r\n        projectLink: \"https://github.com/AlexMuzzy/AstroField\",\r\n      },\r\n\r\n      {\r\n        projectName: \"AppLocker\",\r\n        projectImage: appLocker,\r\n        projectDescription: `An android app locker application, allowing you to lock\r\n                             apps behind a password authentication system \r\n                             via asynchrounous calls.`,\r\n        projectTechnologies: [\"Java\", \"Gradle\", \"Android\", \"SQL\", \"SQLite\"],\r\n        projectLink: \"https://github.com/AlexMuzzy/appLocker\",\r\n      },\r\n    ];\r\n\r\n    const ProjectItem = ({\r\n      projectName,\r\n      projectImage,\r\n      projectDescription,\r\n      projectTechnologies,\r\n      projectLink,\r\n    }: projectType) => (\r\n      <Col lg=\"6\" xs=\"12\" style={{ display: \"flex\", width: \"100% !important\" }}>\r\n        <CardShadow>\r\n          <Card.Body>\r\n            <Row>\r\n              <Col sm=\"6\">\r\n                <Card.Text>\r\n                  <div className=\"h4 lead\">{projectName}</div>\r\n                </Card.Text>\r\n                <Card.Img\r\n                  src={projectImage}\r\n                  style={{\r\n                    backgroundColor: \"transparent\",\r\n                    maxWidth: \"20rem\",\r\n                    margin: \"0 auto\",\r\n                    display: \"block\",\r\n                  }}\r\n                />\r\n              </Col>\r\n              <Col sm=\"6\">\r\n                <Card.Text style={{ paddingTop: \"1.5rem\" }}>\r\n                  {projectDescription}\r\n                </Card.Text>\r\n                {projectTechnologies?.map((projectTechnology: string) => (\r\n                  <div\r\n                    style={{\r\n                      display: \"inline-block\",\r\n                      padding: \"0.5rem\",\r\n                      margin: \"0.5rem\",\r\n                      backgroundColor: \"blue\",\r\n                      color: \"white\",\r\n                      borderRadius: \"0.75rem\",\r\n                      fontWeight: \"lighter\",\r\n                      ...this.props.borderShadow,\r\n                    }}\r\n                  >\r\n                    {projectTechnology}\r\n                  </div>\r\n                ))}\r\n                <Card.Text>\r\n                  <p>\r\n                    <a href={projectLink}>Github Link: {projectLink} </a>\r\n                  </p>\r\n                </Card.Text>\r\n              </Col>\r\n            </Row>\r\n            <Row></Row>\r\n          </Card.Body>\r\n        </CardShadow>\r\n      </Col>\r\n    );\r\n\r\n    return (\r\n      <Container>\r\n        <SubHeading headingTitle=\"Projects\" />\r\n        <Row\r\n          style={{\r\n            display: \"flex\",\r\n            flexWrap: \"nowrap\",\r\n            flexDirection: \"row\",\r\n            overflow: \"auto\",\r\n            overflowY: \"hidden\",\r\n          }}\r\n          id=\"blue-scrollbar\"\r\n        >\r\n          {projectItems.map((projectItem: projectType) => (\r\n            <ProjectItem {...projectItem} />\r\n          ))}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Projects;\r\n","import React, { Component, CSSProperties } from \"react\";\nimport LandingPage from \"./LandingPage\";\nimport BottomNavBar from \"./BottomNavBar\";\nimport Experience from \"./Experience\";\nimport Projects from \"./Projects\";\nimport CanvasBackground from \"../components/canvasBackground\";\n\nclass App extends Component {\n  componentDidMount() {\n    document.title = \"AMuzzy\";\n  }\n\n  render() {\n    const borderShadow: CSSProperties = {\n      boxShadow:\n        \"rgba(0, 0, 0, 0.19) 0px 10px 20px, rgba(0, 0, 0, 0.23) 0px 6px 6px\",\n    };\n\n    return (\n      <>\n        <div style={{ marginBottom: \"3.5rem\" }}>\n          <LandingPage />\n          <Projects borderShadow={borderShadow} />\n          <Experience borderShadow={borderShadow} />\n        </div>\n        <BottomNavBar />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\n// REQUIRED FOR DEBUGGING.\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}